#!/bin/bash

# Function: show help message
show_help() {
    cat << EOF
Usage: dbash 

Launch an interactive shell into a running Docker container selected via fzf.

Options:
  -h, --help    Show this help message and exit.

Examples:
  dbash           # Uses bash by default
  dbash --help    # Displays this help message
EOF
}

# Parse --help or -h
if [[ "$1" == "--help" || "$1" == "-h" ]]; then
    show_help
    exit 0
fi
# Optional parameter if bash is not available
SHELL_TYPE="${1:-bash}"

# Chack for fzf
if ! command -v fzf &> /dev/null; then
    echo "fzf not found, please check the README at https://github.com/wrestlingcarbonapple/dbash" 
    exit 1
fi

# List running containers with name and image
containers=$(docker ps --format "{{.ID}} {{.Image}} {{.Names}}")

# Check if there are any running containers
if [ -z "$containers" ]; then
    echo "No running containers."
    exit 0
fi

# Headers
headers="CONTAINER_ID IMAGE NAME"
containers_with_headers=$(echo -e "$containers\n$headers" | column -t)

# Use fzf to select a container
selected=$(echo "$containers_with_headers" | fzf --prompt="Select container: ")

# Exit if nothing selected
[ -z "$selected" ] && exit 0

# Extract container ID from selected line
container_id=$(echo "$selected" | awk '{print $1}')

selected_shell=$(docker exec "$container_id" cat /etc/shells | awk '{print $1}'| sed 1d | sort | fzf --header="SHELL" --prompt='Select shell>')

# Exit if nothing selected
[ -z "$selected_shell" ] && exit 0

# Exec into the container
echo "Executing $selected_shell in container $container_id..."
docker exec -it "$container_id" "$selected_shell" 
